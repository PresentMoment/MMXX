{"version":3,"sources":["assets/emma.jpg","Home.js","About.js","Contact.js","Exhibitions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","About","Contact","style","height","Form","Group","controlId","Control","type","placeholder","Text","Button","variant","Exhibitions","props","useState","isOpen","setOpen","title","Dropdown","Toggle","Menu","Item","href","target","rel","src","emma","alt","onClick","mainSrc","mainSrcThumbnail","imageCaption","enableZoom","imagePadding","onCloseRequest","App","basename","Navbar","bg","expand","Brand","aria-controls","Collapse","id","Nav","Link","as","to","NavDropdown","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80ded383.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emma.93ff9c91.jpg\";","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div className=\"content\">\n      <h1>MMXX</h1>\n      <br />\n      <p>current show</p>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div className=\"content\">\n      <p>\n        MMXX is artist led gallery founded in 2020 by Emanuele Marcuccio and\n        Daniele Milvio\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Contact() {\n  return (\n    <div className=\"content\">\n      <p>\n        Contact <span style={{ height: \"3rem\" }} />\n        <span /> MMXX <span /> Via Donatello 35 <span /> 20100 MILANO{\" \"}\n        <span style={{ height: \"3rem\" }} />\n        Tel number <span style={{ height: \"2rem\" }} /> Mail address\n        <span style={{ height: \"3rem\" }} />\n        Newsletter\n      </p>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n        <Button className=\"submit\" variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React, { useState } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Lightbox from \"react-image-lightbox\";\n\nimport \"react-image-lightbox/style.css\";\n\nimport emma from \"./assets/emma.jpg\";\n\nfunction Exhibitions(props) {\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <div className=\"content\">\n      <p>{props.title}</p>\n      <br />\n      <p>Info text</p>\n      <br />\n      <p>PDF</p>\n      <br />\n      <Dropdown>\n        <Dropdown.Toggle className=\"press\">Press</Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item\n            href=\"http://www.google.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Press 1\n          </Dropdown.Item>\n          <Dropdown.Item\n            href=\"http://www.google.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Press 2\n          </Dropdown.Item>\n          <Dropdown.Item\n            href=\"http://www.google.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Press 3\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n      <br />\n      <img\n        src={emma}\n        className=\"imgSmall\"\n        alt=\"Skin like Jesus\"\n        onClick={() => {\n          setOpen(true);\n        }}\n      />\n      {isOpen && (\n        <Lightbox\n          mainSrc={emma}\n          mainSrcThumbnail={emma}\n          imageCaption=\"Skin like Jesus\"\n          enableZoom={false}\n          imagePadding={50}\n          onCloseRequest={() => {\n            setOpen(false);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Exhibitions;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\n\nimport \"./App.css\";\n\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Contact from \"./Contact\";\nimport Exhibitions from \"./Exhibitions\";\n\nfunction App() {\n  return (\n    <div>\n      <Router basename=\"MMXX\">\n        <Navbar bg=\"white\" expand=\"lg\">\n          <Navbar.Brand href=\"/MMXX\">MMXX</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/about\" as={Link} to=\"/about\">\n                About\n              </Nav.Link>\n              <Nav.Link href=\"/contact\" as={Link} to=\"/contact\">\n                Contact\n              </Nav.Link>\n              <NavDropdown title=\"Exhibitions\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item\n                  href=\"/exhibition1\"\n                  as={Link}\n                  to=\"/exhibition1\"\n                >\n                  Exhibition 1\n                </NavDropdown.Item>\n                <NavDropdown.Item\n                  href=\"/exhibition2\"\n                  as={Link}\n                  to=\"/exhibition2\"\n                >\n                  Exhibition 2\n                </NavDropdown.Item>\n                <NavDropdown.Item\n                  href=\"/exhibition3\"\n                  as={Link}\n                  to=\"/exhibition3\"\n                >\n                  Exhibition 3\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/exhibition1\">\n            <Exhibitions title={\"Exhibition 1\"} />\n          </Route>\n          <Route path=\"/exhibition2\">\n            <Exhibitions title={\"Exhibition 2\"} />\n          </Route>\n          <Route path=\"/exhibition3\">\n            <Exhibitions title={\"Exhibition 3\"} />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}